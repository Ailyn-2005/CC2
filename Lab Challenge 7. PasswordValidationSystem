// Cunanan, Ailyn F. 
// CC2 CITCS 1B-B

import java.util.Scanner;

public class PasswordValidationSystem {
    public static void main(String[] args) {
        // Create a Scanner object for input (simulated)
        Scanner scanner = new Scanner(System.in);

        // Simulating the first user input (invalid password)
        String simulatedPassword1 = "pass123";
        // Simulating the second user input (valid password)
        String simulatedPassword2 = "Password123";

        // First attempt (invalid password)
        System.out.println("Enter your password: " + simulatedPassword1);
        while (!isValidPassword(simulatedPassword1)) {
            System.out.println("Password must contain at least 8 characters, including one uppercase letter and one number.");
            // Simulate the second attempt (valid password)
            System.out.println("Enter your password: " + simulatedPassword2);
            simulatedPassword1 = simulatedPassword2;  // Update the password for simulation
        }

        // Final output after the valid password is entered
        System.out.println("Your password is valid!");
    }

    // Method to check if the password is valid
    public static boolean isValidPassword(String password) {
        // Check if the password is at least 8 characters long
        if (password.length() < 8) {
            return false;
        }

        // Check if the password contains at least one uppercase letter
        boolean hasUppercase = false;
        // Check if the password contains at least one number
        boolean hasNumber = false;

        // Loop through the password characters to check for uppercase letters and numbers
        for (int i = 0; i < password.length(); i++) {
            char ch = password.charAt(i);
            if (Character.isUpperCase(ch)) {
                hasUppercase = true;
            }
            if (Character.isDigit(ch)) {
                hasNumber = true;
            }
        }

        // Return true if both conditions are met
        return hasUppercase && hasNumber;
    }
}
